Вниматошно, пожалуйста! Эйлер, Рунге-Кутта - одношаговые методы, они считают
последующие значения в узлах опираясь на предыдущие, а Адамс - многошаговый, считает опираясь
на несколько предыдущих значений.
В начале работы Адамса, необходимо вычислить значения в точках yi (i=1,2,3) так было по методичке!

def f(x, y): - Правая часть диффурчика
def correct_f(x): - (Аналитическое) Точное решение диффурчика
def check(a, b): - Возвращает наибольшее отклонение в двух массивах

def Euler(x0, y0, h, xn): - реализовывает метод Эйлера
    x = np.arange(x0, xn + h, h) - Создает массив элементов с равномерным шагом в заданном интервале  +h чтобы конец был включен в него
    y = np.zeros_like(x) - Создает массив нулевых элементов с таким же размером как х
y[i] + h * f(x[i], y[i]) - пробегаем в цикле каждый узел и применяем формулу из методички
y[i] + (h / 2) * (f(x[i], y[i]) + f(x[i + 1], y0)) - После подсчета в узле начинаем уточнять


def modified_Euler(x0, y0, h, xn, epsilon):
Посчитали точки по Эйлеру, а затем уточняем их:
y_k_1 = y[j] + (h / 2) * (f(x[j], y[j]) + f(x[j + 1], y_k))

def Runge_kutta_4(x0, y0, h, xn):
По методичке считаем коэффициенты
k1 = h * f(x[j], y[j])
k2 = h * f(x[j] + h / 2, y[j] + k1 / 2)
k3 = h * f(x[j] + h / 2, y[j] + k2 / 2)
k4 = h * f(x[j] + h, y[j] + k3)

А потом, считаем игрек в узлах
y[j + 1] = y[j] + (k1 + 2 * k2 + 2 * k3 + k4) / 6


def Adams(x0, y0, h, xn):
Делаем разгон для метода Адамса (считаем первые три точки по Рунге-Кутту)
x, y_rk, i = Runge_kutta_4(x0, y0, h, x0 + 3 * h)

Засовываем три точки в массив при этом не трогая начальное условие
y[:4] = y_rk[:4]

Прогнозируем
y[j + 1] = y[j] + h / 24 * (55 * f(x[j], y[j]) - 59 * f(x[j - 1], y[j - 1]) + 37 * f(x[j - 2], y[j - 2]) - 9 * f(x[j - 3],y[j - 3]))

Корректируем
y[j+1] = y[j] + h/24 * (
            9*f(x[j+1], y_predict) + 19*f(x[j], y[j]) -
            5*f(x[j-1], y[j-1]) + f(x[j-2], y[j-2])
        )

+---------------------+----------------+---------------------+-------------------------+----------------+
|                     |   Метод Эйлера |   Мод. метод Эйлера |   Метод Рунге-Кутта (4) |   Метод Адамса |
+=====================+================+=====================+=========================+================+
| Макс. отклонение    |      0.0137565 |         0.000968381 |               1.747e-06 |        8.7e-08 |
+---------------------+----------------+---------------------+-------------------------+----------------+
| Количество итераций |      9         |        19           |              10         |       17       |
+---------------------+----------------+---------------------+-------------------------+----------------+

Ну видно, что метод Адамса сильнее всех по точности